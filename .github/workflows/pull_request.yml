name: Run scans and tests on Rust repos

on:
  pull_request:
    branches:
      - develop
      - master

env:
  AWS_ACCESS_KEY_ID: '${{ secrets.AWS_ACCESS_KEY_ID }}'
  AWS_SECRET_ACCESS_KEY: '${{ secrets.AWS_SECRET_ACCESS_KEY }}'
  AWS_REGION: 'eu-central-1'

jobs:
  ci-ct-job-for-rust-repos:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Terraform Init
        id: init
        run: |
          terraform init 
          # AWS S3 bucket backend
        working-directory: ./devops/terraform
      - name: Terraform Apply
        id: apply
        run: terraform apply --auto-approve
        continue-on-error: false
        working-directory: ./devops/terraform
      - name: Resolve terraform outputs and render template
        run: |
          sudo apt-get install -y jq

          cd ./devops/terraform
          aws_endpoint_url=$(terraform output -json bucket_domain_name_list | jq -r --argjson index 0 '.[$index]')
          aws_bucket_name=$(terraform output -json bucket_name_list | jq -r --argjson index 0 '.[$index]')
          cd -

          template_file="templates/secrets.template.cfg"
          output_file="secrets.cfg"
          cat $template_file | sed "s+PLACEHOLDER_AWS_ACCESS_KEY_ID+${{ env.AWS_ACCESS_KEY_ID }}+g" > $output_file
          sed -i "s+PLACEHOLDER_AWS_SECRET_ACCESS_KEY+${{ env.AWS_SECRET_ACCESS_KEY }}+g" $output_file
          sed -i "s+PLACEHOLDER_AWS_REGION+${{ env.AWS_REGION }}+g" $output_file
          sed -i "s+PLACEHOLDER_AWS_BUCKET_NAME+${aws_bucket_name}+g" $output_file
        working-directory: ./  
      - name: Test Rust repository
        uses: MGTheTrain/public-github-actions/.github/actions/test-rust-repository@main
        with:
          WORKING_DIRECTORY: ./
      - name: Terraform Destroy
        id: destroy
        run: terraform destroy --auto-approve
        continue-on-error: false
        working-directory: ./devops/terraform